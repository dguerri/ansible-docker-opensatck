---

#
# Copyright (c) 2015 Davide Guerri <davide.guerri@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

- name: Start up Keystone docker container
  hosts: docker-server

  tasks:
    - name: Start Keystone container
      become: yes
      docker:
        image: dguerri/openstack-keystone
        name: "{{ KEYSTONE_HOSTNAME }}"
        hostname: "{{ KEYSTONE_HOSTNAME }}"
        expose: "{{ KEYSTONE_PORT }},{{ KEYSTONE_ADMIN_PORT }}"
        ports: 0.0.0.0:{{ KEYSTONE_PORT }}:{{ KEYSTONE_PORT }},0.0.0.0:{{ KEYSTONE_ADMIN_PORT }}:{{ KEYSTONE_ADMIN_PORT }}
        detach: yes
        tty: yes
        env:
          ADMIN_TOKEN: "{{ ADMIN_TOKEN }}"
          MYSQL_ROOT_PASSWORD: "{{ MYSQL_ROOT }}"
          MYSQL_HOST: "{{ DATABASE_HOSTNAME }}"
          KEYSTONE_DBUSER: "{{ MYSQL_KEYSTONE_USER }}"
          KEYSTONE_DBPASS: "{{ MYSQL_KEYSTONE_PASS }}"

    - name: Wait Keystone server (user port)
      wait_for:
        host: "{{ KEYSTONE_HOSTNAME }}"
        port: "{{ KEYSTONE_PORT }}"
        state: started

    - name: Wait Keystone server (admin port)
      wait_for:
        host: "{{ KEYSTONE_HOSTNAME }}"
        port: "{{ KEYSTONE_ADMIN_PORT }}"
        state: started

    - name: Create Keystone tenants
      keystone_user:
        tenant: "{{ item.name }}"
        tenant_description: "{{ item.description|default('') }}"
        endpoint: "{{ KEYSTONE_PROTOCOL }}://{{ KEYSTONE_HOSTNAME }}:{{ KEYSTONE_ADMIN_PORT }}/v2.0"
        token: "{{ ADMIN_TOKEN }}"
        state: present
      with_items:
        - { name: admin, description: "Admin tenant" }
        - { name: service, description: "Service tenant" }
        - { name: demo, description: "Demo tenant"  }

    - name: Create Keystone users
      keystone_user:
        user: "{{ item.name }}"
        password: "{{ item.password }}"
        tenant: "{{ item.tenant }}"
        email: nobody@localhost
        endpoint: "{{ KEYSTONE_PROTOCOL }}://{{ KEYSTONE_HOSTNAME }}:{{ KEYSTONE_ADMIN_PORT }}/v2.0"
        token: "{{ ADMIN_TOKEN }}"
        state: present
      with_items:
        - { name: admin, password: "{{ ADMIN_PASS }}", tenant: admin }
        - { name: demo, password: "{{ DEMO_PASS }}", tenant: demo }
        - { name: glance, password: "{{ GLANCE_PASS }}", tenant: service }
        - { name: neutron, password: "{{ NEUTRON_PASS }}", tenant: service }
        - { name: nova, password: "{{ NOVA_PASS }}", tenant: service }

    - name: Add Keystone roles to defined users in defined tenants
      keystone_user:
        role: "{{ item.name }}"
        user: "{{ item.user }}"
        tenant: "{{ item.tenant }}"
        endpoint: "{{ KEYSTONE_PROTOCOL }}://{{ KEYSTONE_HOSTNAME }}:{{ KEYSTONE_ADMIN_PORT }}/v2.0"
        token: "{{ ADMIN_TOKEN }}"
        state: present
      with_items:
        - { name: admin, user: admin, tenant: admin }
        - { name: _member_, user: demo, tenant: demo  }
        - { name: admin, user: glance, tenant: service  }
        - { name: admin, user: neutron, tenant: service  }
        - { name: admin, user: nova, tenant: service  }

    - name: Create Keystone services
      os_keystone_service:
        name: "{{ item.name }}"
        service_type: "{{ item.service_type }}"
        description: "{{ item.description|default('Not provided') }}"
        state: present
        cloud: "envvars"
      with_items:
        - { name: keystone, service_type: identity }
        - { name: glance, service_type: image }
        - { name: neutron, service_type: network }
        - { name: nova, service_type: compute }
      environment:
          OS_AUTH_TYPE: "token_endpoint"
          OS_ENDPOINT: "{{ KEYSTONE_PROTOCOL }}://{{ KEYSTONE_HOSTNAME }}:{{ KEYSTONE_ADMIN_PORT }}/v2.0"
          OS_TOKEN: "{{ ADMIN_TOKEN }}"

    - name: Create Keystone endpoints
      os_keystone_endpoint:
        service_name: "{{ item.service_name }}"
        region: "{{ item.region|default(None) }}"
        public_url: "{{ item.public_url }}"
        internal_url: "{{ item.internal_url }}"
        admin_url: "{{ item.admin_url }}"
        state: present
        cloud: "envvars"
      with_items:
        - service_name: keystone
          public_url: "{{ KEYSTONE_PROTOCOL }}://{{ KEYSTONE_HOSTNAME }}:{{ KEYSTONE_PORT }}/v2.0"
          internal_url: "{{ KEYSTONE_PROTOCOL }}://{{ KEYSTONE_HOSTNAME }}:{{ KEYSTONE_PORT }}/v2.0"
          admin_url: "{{ KEYSTONE_PROTOCOL }}://{{ KEYSTONE_HOSTNAME }}:{{ KEYSTONE_ADMIN_PORT }}/v2.0"
        - service_name: glance
          public_url: "{{ GLANCE_PROTOCOL }}://{{ GLANCE_HOSTNAME }}:{{ GLANCE_PORT }}/"
          internal_url: "{{ GLANCE_PROTOCOL }}://{{ GLANCE_HOSTNAME }}:{{ GLANCE_PORT }}/"
          admin_url: "{{ GLANCE_PROTOCOL }}://{{ GLANCE_HOSTNAME }}:{{ GLANCE_PORT }}/"
        - service_name: neutron
          public_url: "{{ NEUTRON_PROTOCOL }}://{{ NEUTRON_SERVER_HOSTNAME }}:{{ NEUTRON_PORT }}/"
          internal_url: "{{ NEUTRON_PROTOCOL }}://{{ NEUTRON_SERVER_HOSTNAME }}:{{ NEUTRON_PORT }}/"
          admin_url: "{{ NEUTRON_PROTOCOL }}://{{ NEUTRON_SERVER_HOSTNAME }}:{{ NEUTRON_PORT }}/"
        - service_name: nova
          public_url: "{{ NOVA_API_PROTOCOL }}://{{ NOVA_API_HOSTNAME }}:{{ NOVA_API_PORT }}/v2/%(tenant_id)s"
          internal_url: "{{ NOVA_API_PROTOCOL }}://{{ NOVA_API_HOSTNAME }}:{{ NOVA_API_PORT }}/v2/%(tenant_id)s"
          admin_url: "{{ NOVA_API_PROTOCOL }}://{{ NOVA_API_HOSTNAME }}:{{ NOVA_API_PORT }}/v2/%(tenant_id)s"
      environment:
          OS_AUTH_TYPE: "token_endpoint"
          OS_ENDPOINT: "{{ KEYSTONE_PROTOCOL }}://{{ KEYSTONE_HOSTNAME }}:{{ KEYSTONE_ADMIN_PORT }}/v2.0"
          OS_TOKEN: "{{ ADMIN_TOKEN }}"
  tags:
    - keystone
    - controller
